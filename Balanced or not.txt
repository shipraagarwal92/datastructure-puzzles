import java.util.Stack;
 
public class Solution 
{
 
    
   static int balancedOrNot(String[] expressions, int[]
          maxReplacements) {
    {
	
	    for(i=0 ; i<expressions.length ; i++)
		{
          int len = expressions[i].length();
     
        
          if (len%2 != 0)
           {
     
              int t = maxReplacements[i];
			  tests:
             for(int a0 = 0; a0 < t; a0++){
               String s = in.next();
              Stack<Character> stack = new Stack<>();
            
            for(char c : s.toCharArray())
            {
                if(c == '<')
                    stack.push('>');
                
                
                else{
                    if( stack.isEmpty() || c != stack.peek()){
                        System.out.println("0");
                        continue tests;    
                    }
                    else{
                        stack.pop();
                    }
                }
            }
            if(stack.isEmpty())
                System.out.println("1");
            else
                System.out.println("0");
        }
    }
}
    